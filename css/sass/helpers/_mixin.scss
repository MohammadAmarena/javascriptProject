/*
    Overlay Mixin
    Accept Argument => Color
    Example: @include overlay(black, .5);
*/

@mixin overlay($color, $opacity) {
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
	background-color: rgba($color, $opacity);
}

// media

@mixin breakpoints($point) {
	@if $point == mobile {
		@media (max-width: 500px) {
			@content;
		}
	} @else if $point == small {
		@media (min-width: 501px) and (max-width: 767px) {
			@content;
		}
	} @else if $point == medium {
		@media (min-width: 992px) and (max-width: 1199px) {
			@content;
		}
	} @else if $point == large {
		@media (min-width: 1200px) {
			@content;
		}
	}
}

// heading
@mixin heading {
	text-align: center;
	margin: 3rem;
	font-size: 1.5em;
}

// flex
@mixin dFlex {
	display: flex;
	justify-content: space-evenly;
	flex-flow: wrap;
}

@mixin flexCenter {
	display: flex;
	justify-content: center;
	align-items: center;
	flex-flow: wrap;
}

@mixin boxShadow {
	box-shadow: 0 0 10px $white;
}

// cards mixin
@mixin card {
	.card {
		position: relative;
		overflow: hidden;
		@include breakpoints(mobile) {
			min-width: 100%;
		}
		@include breakpoints(small) {
			min-width: 40%;
		}
		cursor: pointer;
		box-shadow: 0 0 10px;
		text-align: center;
		padding: 0.5rem;
		margin: 1rem;
		max-width: 23%;
		transition: $main-transition;
		&:hover {
			transform: scale(1.1);
			background-color: $white;
			color: $main-color;
		}
		&:hover .btn {
			bottom: 0;
		}
		.title {
			padding: 1rem;
		}
		.category,
		.price {
			padding: 0.5rem;
			font-weight: bold;
			margin-bottom: 15px;
		}
		img {
			max-width: 100%;
		}
		.btn {
			@include btn;
			position: absolute;
			bottom: -30px;
			height: 30px;
			left: 0;
			width: 100%;
		}
	}	
}

@mixin btn {
	border: 2px solid;
	cursor: pointer;
	box-shadow: 0 0 3px inset $secondColor;
	background-color: $white;
	color: $main-color;
	border-radius: 4px;
	transition: $main-transition;
	padding: 3px;
	&:hover {
		background-color: $green;
	}
}